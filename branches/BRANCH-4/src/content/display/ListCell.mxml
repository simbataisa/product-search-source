<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" paddingBottom="0" horizontalScrollPolicy="off" verticalScrollPolicy="off" horizontalGap="10"
>

<mx:Script>
<![CDATA[
//dataChange="parseRating(data.rating);"
	import mx.events.FlexEvent;
	import mx.managers.DragManager;
	import mx.core.DragSource;
	import mx.events.ItemClickEvent;
	import mx.effects.*;
	import mx.effects.effectClasses.*;
	import mx.events.*;
	import mx.core.*;
	public var resizeInst:ResizeInstance;
	
	[Embed(source="/images/star.png")]
	public var star:Class;
	[Embed(source="/images/greyStar.png")]
	public var greyStar:Class;
	[Embed(source="/images/halfGrey.png")]
	public var halfStar:Class;
	
	[Bindable]
	public var itemImageSize:uint = 80;
	private var functions:Array = new Array("go shopping");
	
	private function truncate(str:String):String{
		if(str.length > 300)
			return str.substr(0,300)+"...";
		else
			return str;
		}

	private function parsePrice(p1:String, p2:String):String{
		var format:String = "";
		if(p1.indexOf("-1") > -1 || p1 == "" || p1 ==  null)
			format += "N/A";
		else
			format += "$"+p1;
			
		if(p2.indexOf("-1") > -1 || p2 == "" || p2 ==  null)
			format += "-N/A";
		else
			format += "-$"+p2;					
		return format;
		}

	private function parseRating(rateData:String):void{
		var rate:Number; 
		if(rateData == "" ||rateData == null)
			rate = 0;
		else
			rate = Number(rateData);
		rateBox.removeAllChildren();	
		//---------------------------------
		for(var i:uint = 1; i<=5; i++){
			var img:Image = new Image();
			img.width = 10;
			img.height = 10;
			img.alpha = 0.7;
			if(Number(i) <= rate){
				img.source = star;
			}
			else if((Number(i)-0.25)>rate && (Number(i-1)+0.25) < rate){
				img.source = halfStar;					
			}
		
		
			else if(Number(i) > rate){
				img.source = greyStar;
			}
			
			rateBox.addChild(img);
		}
		}

		private function startDragHandler(e:MouseEvent):void{
			var dragInitiator:Image = Image(e.currentTarget);
			var dragSource:DragSource = new DragSource();
			dragSource.addData(data, "product data");
			var imageProxy:Image = new Image;
			imageProxy.source = dragInitiator.source;
			imageProxy.width = dragInitiator.width;
			imageProxy.height = dragInitiator.height;
			DragManager.doDrag(dragInitiator, dragSource, e, imageProxy);
			}

		private function itemClickHandler(e:ItemClickEvent):void{
			if(e.label == "go shopping"){
				var request:URLRequest = new URLRequest(data.url);
				navigateToURL(request,"_blank");
			}
			}



	public function handleMouse(event:MouseEvent):void
		{
		if (resizeInst)
		resizeInst.reverse();
		else
		r.play([event.currentTarget],event.type==MouseEvent.MOUSE_OUT);
		}

]]>
</mx:Script>
   <mx:Resize id="r" heightTo="150" heightFrom="120" widthFrom="80" widthTo="120" effectStart="resizeInst = ResizeInstance(event.effectInstance);" effectEnd ="resizeInst=null"/>

	<mx:Image source="C:/ProductSearch/images/{data.primaryImage}" 
		width="{itemImageSize}" height="{itemImageSize}" 
		mouseMove="startDragHandler(event)" mouseOver="handleMouse(event)" 
		mouseOut="handleMouse(event)"/>
	<mx:VBox verticalGap="0">
		
		<mx:Label text="{data.name}" fontWeight="bold" />
		<mx:Label text="{parsePrice(data.minRetail, data.maxRetail)}" color="#990000" fontWeight="bold"/>
		<mx:HBox id="rateBox" />
		<mx:Label text="Merchant: {data.merchant}" />
		<mx:Text  text="{truncate(data.description)}" width="600"   truncateToFit="true"/>
		<mx:ButtonBar dataProvider="{functions}" itemClick="itemClickHandler(event)">
			
		</mx:ButtonBar>
	</mx:VBox>

</mx:HBox>
